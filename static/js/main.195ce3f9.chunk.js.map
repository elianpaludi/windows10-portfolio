{"version":3,"sources":["components/PantallaBloqueda.jsx","components/Windows.jsx","App.js","reportWebVitals.js","index.js"],"names":["PantallaBloqueda","hora","Date","getHours","minutos","getMinutes","dia","getDay","mes","getMonth","fecha","getDate","useState","pass","setPass","errorPIN","document","getElementById","console","log","window","location","href","className","onClick","classList","add","id","class","onChange","e","target","value","type","minLength","maxLength","placeholder","helperEsp","toggle","Windows","App","exact","path","component","PantallaBloqueada","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"iPAqHeA,EAnHU,WACjB,IAAMC,GAAO,IAAIC,MAAOC,WAClBC,GAAU,IAAIF,MAAOG,aACvBC,GAAM,IAAIJ,MAAOK,SACfC,GAAM,IAAIN,MAAOO,WAAa,EAC9BC,GAAQ,IAAIR,MAAOS,UAGV,IAARL,IACCA,EAAI,UAEG,IAARA,IACCA,EAAI,WAEG,IAARA,IACCA,EAAI,cAEG,IAARA,IACCA,EAAI,WAEG,IAARA,IACCA,EAAI,YAEG,IAARA,IACCA,EAAI,WAEG,IAARA,IACCA,EAAI,YA3BW,MAsDSM,mBAAS,IAtDlB,mBAsDRC,EAtDQ,KAsDFC,EAtDE,KAuDXC,EAAWC,SAASC,eAAe,aAgBnD,OAfYC,QAAQC,IAAIJ,GACA,SAATF,IACCO,OAAOC,SAASC,KAAO,iCAcnC,sBAAKC,UAAU,YAAf,UACI,qBAAKC,QA9BL,WACwBR,SAASC,eAAe,iBAC1BQ,UAAUC,IAAI,qBA4BPC,GAAG,gBAAgBJ,UAAU,aAA1D,SACI,sBAAKA,UAAU,kBAAf,UAEA,sBAAKA,UAAU,OAAf,UACI,mBAAGI,GAAG,cAAN,SAAqB1B,IACrB,kCACA,mBAAG0B,GAAG,iBAAN,SAAwBvB,OAG5B,sBAAKmB,UAAU,MAAf,UACI,4BAAIjB,IACJ,8BAAIE,EAAJ,OACA,4BAAIE,YAKZ,qBAAKa,UAAU,oBAAf,SACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,oBACf,6BAzDM,oBA0DF,mBAAGI,GAAG,WAAWC,MAAM,OAAvB,kBACJ,sBAAKL,UAAU,sBAAf,UACI,uBACAM,SAAU,SAACC,GAAD,OAAOhB,EAAQgB,EAAEC,OAAOC,QAClCC,KAAK,WAAWN,GAAG,eACnBO,UAAU,IACVC,UAAU,IACVC,YAAY,wBAGZ,qBAAKZ,QAvCzB,WACI,IAAIa,EAAYrB,SAASC,eAAe,aACxBD,SAASC,eAAe,aACxCoB,EAAUZ,UAAUa,OAAO,SAoCUf,UAAU,WAA/B,kBAGA,mBAAGI,GAAG,YAAYC,MAAM,cAAxB,uCCpFTW,G,MAvBC,WACZ,OACI,sBAAKhB,UAAU,oBAAf,UACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,YACX,mBAAGA,UAAU,gBAAb,uBAGJ,mCACI,qBAAKA,UAAU,iBACf,uBACAU,KAAK,OACLG,YAAY,mCAIpB,qBAAKb,UAAU,oC,eCMZiB,MAff,WACE,OACE,qBAAKjB,UAAU,MAAf,SACA,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOkB,OAAK,EAACC,KAAK,IAAIC,UAAWC,MAEnC,cAAC,IAAD,UACE,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,WAAWC,UAAWJ,YCLjCM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxC,SAASC,eAAe,SAM1B4B,M","file":"static/js/main.195ce3f9.chunk.js","sourcesContent":["import {React, useState} from 'react'\r\nimport '../styles/Index/index.css'\r\nconst PantallaBloqueda = () => {\r\n        const hora = new Date().getHours() //Hora actual\r\n        const minutos = new Date().getMinutes()  //Minutos   \r\n        let dia = new Date().getDay() //Dia de la semana (Lunes, Martes, etc)\r\n        const mes = new Date().getMonth() + 1; //Mes + 1 para que de el actual\r\n        const fecha = new Date().getDate() //Obtenemos la fecha del mes (22, 24, 27, etc)\r\n    \r\n\r\n            if(dia === 1){ //Transformamos el dia de la semana a letras\r\n                dia='Lunes,'\r\n            }\r\n            if(dia === 2){//Transformamos el dia de la semana a letras\r\n                dia='Martes,'\r\n            }\r\n            if(dia === 3){//Transformamos el dia de la semana a letras\r\n                dia='Miercoles,'\r\n            }\r\n            if(dia === 4){//Transformamos el dia de la semana a letras\r\n                dia='Jueves,'\r\n            }\r\n            if(dia === 5){//Transformamos el dia de la semana a letras\r\n                dia='Viernes,'\r\n            }\r\n            if(dia === 6){//Transformamos el dia de la semana a letras\r\n                dia='Sabado,'\r\n            }\r\n            if(dia === 0){//Transformamos el dia de la semana a letras\r\n                dia='Domingo,'\r\n            }\r\n            \r\n           \r\n\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n\r\n    //Usuario y cambio de usuario \r\n\r\n            let usuario = \"Elian Rodriguez\"\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n\r\n            //Trabajamos con el fondo de la pantalla\r\n\r\n        \r\n\r\n            function backgroundUno(){\r\n                let backgroundUno = document.getElementById('backgroundUno')\r\n                    backgroundUno.classList.add('animacion-arriba')\r\n            }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n            //Trabajo con la contrase√±a de ingreso a windows10\r\n                \r\n                const [pass, setPass] = useState('')\r\n                let errorPIN = document.getElementById('#errorPIN');\r\n                console.log(errorPIN)\r\n                if(pass === '1234'){\r\n                    window.location.href = 'http://localhost:3000/windows'\r\n                }else{\r\n                    // errorPIN.classList.remove('none')\r\n                }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n\r\n    function helper(){\r\n        let helperEsp = document.getElementById('helperEsp')\r\n        let helperEng = document.getElementById('helperEng')\r\n        helperEsp.classList.toggle('none');\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div onClick={backgroundUno} id=\"backgroundUno\" className=\"background\">\r\n                <div className=\"container-block\">\r\n\r\n                <div className=\"hora\">\r\n                    <p id=\"parrafoHora\">{hora}</p>\r\n                    <p>:</p>\r\n                    <p id=\"parrafoMinutos\">{minutos}</p>\r\n                </div>\r\n\r\n                <div className=\"dia\">\r\n                    <p>{dia}</p>\r\n                    <p>{mes} </p>\r\n                    <p>{fecha}</p>\r\n                </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"backgroundIngreso\">\r\n                <div className=\"ingreso\">\r\n                    <div className=\"imagenDeUsuario\"></div>\r\n                    <h2>{usuario}</h2>\r\n                        <p id=\"errorPIN\" class=\"none\">1234</p>\r\n                    <div className=\"contenedorDeIngreso\">\r\n                        <input \r\n                        onChange={(e) => setPass(e.target.value)}\r\n                        type=\"password\" id=\"inputIngreso\"\r\n                        minLength=\"4\"\r\n                        maxLength=\"4\"\r\n                        placeholder=\"Enter your password\"\r\n                        />\r\n                        \r\n                        <div onClick={helper}className=\"pregunta\">?</div>\r\n                        \r\n                    </div>\r\n                        <p id=\"helperEsp\" class=\"helper none\">Intenta con 1234</p>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PantallaBloqueda\r\n","import React from 'react'\r\nimport '../styles/Windows/windows.css'\r\nconst Windows = () => {\r\n    return (\r\n        <div className=\"container-windows\">\r\n            <div className=\"windows\">\r\n                <div className=\"carpeta\"></div>\r\n                    <p className=\"texto-carpeta\">Proyectos</p>\r\n                \r\n\r\n                <footer>\r\n                    <div className=\"iconowindows\"></div>\r\n                    <input \r\n                    type=\"text\" \r\n                    placeholder=\"Escribe aqui para buscar\"/>\r\n                </footer>\r\n            </div>\r\n\r\n            <div className=\"carpeta_expanded-proyectos\">\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Windows\r\n","import './styles/main.css'\nimport PantallaBloqueada from './components/PantallaBloqueda.jsx'\nimport Windows from './components/Windows.jsx'\n\nimport {\n  Switch,\n  Route,\n  BrowserRouter as Router} from 'react-router-dom'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={PantallaBloqueada}/>\n      </Switch>\n      <Switch>\n        <Route exact path=\"/windows\" component={Windows}/>\n      </Switch>\n    </Router>\n    </div> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}